name: Deploy to VPS

on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest

        env:
            appFolder: /eliza/app
            projectName: eliza
            repo: git@github.com:metasvit/eliza.git

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up SSH
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.VPS_PRIVATE_KEY }}

            - name: Add GitHub to known_hosts
              run: |
                  mkdir -p ~/.ssh
                  ssh-keyscan github.com >> ~/.ssh/known_hosts

            #   - name: Create directory
            #     run: ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} 'mkdir -p ${{ env.appFolder }}'

            - name: Clone repository or pull latest changes
              run: |
                  ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
                    if [ -d "${{ env.appFolder }}/.git" ]; then
                      cd ${{ env.appFolder }}
                      git pull origin main
                    else
                      git clone ${{env.repo}} ${{ env.appFolder }}
                    fi
                  EOF

            - name: Deploy to VPS
              run: |
                  ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} " \
                    cd ${{ env.appFolder }} && \
                    export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} && \
                    export TWITTER_USERNAME=${{ secrets.TWITTER_USERNAME }} && \
                    export TWITTER_PASSWORD=${{ secrets.TWITTER_PASSWORD }} && \
                    export TWITTER_EMAIL=${{ secrets.TWITTER_EMAIL }} && \
                    docker compose -f docker-compose-gcvps.yaml down && \
                    docker compose -p ${{ env.projectName }} -f docker-compose-gcvps.yaml up -d --build"

            - name: Clean up unused Docker resources
              run: |
                  ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
                    docker system prune -f
                  EOF
